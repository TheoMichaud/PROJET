class CyclesArrossage
!!!129282.cpp!!!	CyclesArrossage(in _brocheCarteSD : gpio_num_t)
  pinMode(brocheCarteSD, OUTPUT);

  valeurDefaut = false;

  if (! SD.begin(brocheCarteSD)){



  // mettre initialisation tableau fixe si pas de carte SD
      seuilZoneMin[0]=20;
      seuilZoneMin[1]=25;
      seuilZoneMin[2]=30;
      seuilZoneMin[3]=35;
      seuilZoneMax[0]=60;
      seuilZoneMax[1]=85;
      seuilZoneMax[2]=80;
      seuilZoneMax[3]=75;

   valeurDefaut = true;


  // mettre initialisation tableau fixe si pas de carte SD

      
     
  
  
} else{

    for(int i=0;i<4;i++)
    { 
      seuilZoneMin[i]=0;
      seuilZoneMax[i]=0;
    }
}

!!!129410.cpp!!!	LireCarteSD() : void
    if(!valeurDefaut)
    {
          
    File fichier = SD.open("/seuils.txt",FILE_READ);
        
    char tampon[80];
    char carlu;
    int indice=0;
    char *ptr;
    int cpt = 0;
    int zone;
    
    for(int nbZone = 0 ; nbZone < 4 ; nbZone++)
    {
      
        
        do {
            carlu=fichier.read();
            
            if(carlu!=-1)
            {
                tampon[indice++] = carlu;
            }
        }
        while(carlu!='\n');
        if(indice > 0)
          tampon[indice-1] = '\0';
        
        indice = 0;      
        ptr = strtok(tampon, " ");  
        while (ptr != NULL)
        {
            switch(cpt)
            {
            case 0:
                zone = atoi(ptr) -1;
                cpt++;
                break;
            case 1:
                seuilZoneMin[zone] = atoi(ptr);
                cpt++;
                break;
            case 2:
                seuilZoneMax[zone] = atoi(ptr);
                cpt = 0 ;
                break;  
            }
            ptr = strtok( NULL, " ");
        }
        
    }
    fichier.close();
    }
!!!129538.cpp!!!	LireCarteSDModeProg() : void
    if(!valeurDefaut)
    {
      
    File fichier = SD.open("/modeProgramme.txt",FILE_READ);
    
    char tampon[80];
    char carlu;
    int indice=0;
    char *ptr;
    int cpt = 0;
    int zone;
    String date2;
    String heure;
    
    for(int nbZone = 0 ; nbZone < 4 ; nbZone++)
    {
        
        do {
            carlu=fichier.read();
            
            if(carlu!=-1)
            {
                tampon[indice++] = carlu;
            }
        }
        while(carlu!='\n');
        if(indice > 0)
          tampon[indice-1] = '\0';
        Serial.print("tampon : ");
        Serial.println(tampon);
        indice = 0;      
        ptr = strtok(tampon, " ");  

       

        
        while (ptr != NULL)
        {
            switch(cpt)
            {
            case 0:
                zone = atoi(ptr) -1;
                cpt++;
                break;
            case 1:
                ConvertirDate(ptr,&dateDepart[zone]);
                cpt++;
                break;
            case 2:
                ConvertirHeure(ptr,&heureDepart[zone]);
                cpt++;
                break;
            case 3:
                periodicite[zone] = atoi(ptr);
                cpt++ ;
                break; 
            case 4:
                duree[zone] = atoi(ptr);
                cpt = 0 ;
                break; 
            }
            ptr = strtok( NULL, " ");
        }
        
    }
    fichier.close();
    }
!!!129666.cpp!!!	ObtenirSeuilMax(in _zone : int) : int
  return seuilZoneMax[_zone] ;
!!!129794.cpp!!!	ObtenirSeuilMin(in _zone : int) : int
  return seuilZoneMin[_zone] ;
!!!129922.cpp!!!	ObtenirDuree(in _zone : int) : int
  return duree[_zone] ;
!!!130050.cpp!!!	ObtenirPeriode(in _zone : int) : int
  return periodicite[_zone] ;
!!!130178.cpp!!!	ObtenirDate(in _zone : int) : Date
  return dateDepart[_zone] ;
!!!130306.cpp!!!	ObtenirHeure(in _zone : int) : Heure
  return heureDepart[_zone] ;
!!!130434.cpp!!!	ConvertirDate(in dateStr : String, inout ladate : Date) : void
    int parametres[3];
    size_t prec = 0;
    size_t pos =  0;
    for (int indice = 0;indice < 3;indice++)
    {
        pos = dateStr.indexOf('-',prec);
        parametres[indice] = atoi(dateStr.substring(prec,pos).c_str());
        prec = pos + 1; // on incrémente pos pour le tour d'après.
    }
    ladate-> annee = parametres[0];
    ladate-> jour = parametres[1];
    ladate-> mois = parametres[2];
!!!130562.cpp!!!	ConvertirHeure(in heureStr : String, inout heure : Heure) : void
    int parametres[3];
    size_t prec = 0;
    size_t pos =  0;
    for (int indice = 0;indice < 3;indice++)
    {
        pos = heureStr.indexOf(':',prec);
        parametres[indice] = atoi(heureStr.substring(prec,pos).c_str());
        prec = pos + 1; // on incrémente pos pour le tour d'après.
    }
    heure-> heure = parametres[0];
    heure-> minutes = parametres[1];
    heure-> secondes = parametres[2];
